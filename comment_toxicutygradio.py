# -*- coding: utf-8 -*-
"""Comment toxicutygradio.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QUOiOt9kazSuLiqb085aMO_07NI8uIIY
"""

!pip install gradio jinja2

!git clone https://github.com/nicknochnack/CommentToxicity.git

import pandas as pd
import numpy as np
import gradio as gr 

import tensorflow as tf
from tensorflow.keras.layers import TextVectorization

df = pd.read_csv('/content/CommentToxicity/jigsaw-toxic-comment-classification-challenge/train.csv/train.csv')
df.shape

X = df['comment_text']
y = df[df.columns[2:]].values

max_features = 2000000

vecterizor = TextVectorization(max_tokens=max_features,output_sequence_length=1800,output_mode='int')

vecterizor.adapt(X.values)

model_path = '/content/commenttoxicity (1).h5'

model = tf.keras.models.load_model(model_path)

input_str = vecterizor('your so horrible ')
res = model.predict(np.expand_dims(input_str,0))
res

(res > 0.5).astype(int)

def score_comment(comment):
    vectorized_comment = vecterizor([comment])
    results = model.predict(vectorized_comment)

    text = ''
    for idx, col in enumerate(df.columns[2:]):
        text += '{}: {}\n'.format(col, results[0][idx]>0.5)

    return text

interface = gr.Interface(fn=score_comment,
                         inputs=gr.Textbox(lines=2, placeholder='Comment to score'),
                        outputs='text')

interface.launch(share=True)
